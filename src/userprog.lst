 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 59
    4                      ; Text size: 3384
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  75736572	.ascii "userprog.dlx.obj\000"
   12  00002004  70726f67	
   12  00002008  2e646c78	
   12  0000200c  2e6f626a	
   12  00002010  00      	
   13  00002011          	.align 2
   14  00002014          	LC1_LF0:
   15  00002014  25632564	.ascii "%c%d\n\000"
   15  00002018  0a00    	
   16  0000201a          	.align 2
   17  0000201c          	LC2_LF0:
   18  0000201c  55736167	.ascii "Usage: \000"
   18  00002020  653a2000	
   19  00002024          	.align 2
   20  00002024          	LC3_LF0:
   21  00002024  206e756d	.ascii " number\n\000"
   21  00002028  6265720a	
   21  0000202c  00      	
   22  0000202d          	.align 2
   23  00002030          	LC4_LF0:
   24  00002030  61726763	.ascii "argc = %d\n\000"
   24  00002034  203d2025	
   24  00002038  640a00  	
   25  0000203b          	.text
   26  00001000          	.align 2
   27  00001000          	.proc _main
   28  00001000          	.global _main
   29  00001000          	_main:
   30                      ;  Function 'main'; 32 bytes of locals, 0 regs to save.
   31  00001000  afbefffc	sw	-4(r29),r30; push fp
   32  00001004  001df020	add	r30,r0,r29; fp = sp
   33  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   34  0000100c  2fbd0028	subui	r29,r29,#40; alloc local storage
   35  00001010  8fc20000	lw	r2,(r30)
   36  00001014  8fc30004	lw	r3,4(r30)
   37  00001018  0c000d14	jal	___main
   38  0000101c  54000000	nop; not filled.
   39  00001020  60410002	seqi	r1,r2,#2
   40  00001024  14200018	bnez	r1,L3_LF0
   41  00001028  54000000	nop; not filled.
   42  0000102c  60410003	seqi	r1,r2,#3
   43  00001030  1020017c	beqz	r1,L20_LF0
   44  00001034  54000000	nop; not filled.
   45  00001038  080000cc	j	L9_LF0
   46  0000103c  54000000	nop; not filled.
   47  00001040          	L3_LF0:
   48  00001040  23bdfff0	addi	r29,r29,#-16
   49  00001044  8c630004	lw	r3,4(r3)
   50  00001048  afa30000	sw	(r29),r3
   51  0000104c  20060000	addi	r6,r0,#0
   52  00001050  afa60004	sw	4(r29),r6
   53  00001054  2006000a	addi	r6,r0,#10
   54  00001058  afa60008	sw	8(r29),r6
   55  0000105c  0c0009e4	jal	_dstrtol
   56  00001060  54000000	nop; not filled.
   57  00001064  00012820	add	r5,r0,r1
   58  00001068  20060001	addi	r6,r0,#1
   59  0000106c  afa60000	sw	(r29),r6
   60  00001070  0c000224	jal	_sem_create
   61  00001074  54000000	nop; not filled.
   62  00001078  afa10000	sw	(r29),r1
   63  0000107c  23c4ffd8	addi	r4,r30,#-40
   64  00001080  afa40004	sw	4(r29),r4
   65  00001084  0c0008b0	jal	_ditoa
   66  00001088  54000000	nop; not filled.
   67  0000108c  20030000	addi	r3,r0,#0
   68  00001090  23bd0010	addi	r29,r29,#16
   69  00001094  0065082a	slt	r1,r3,r5
   70  00001098  10200170	beqz	r1,L2_LF0
   71  0000109c  54000000	nop; not filled.
   72  000010a0  23c2ffe8	addi	r2,r30,#-24
   73  000010a4          	L7_LF0:
   74  000010a4  23bdfff8	addi	r29,r29,#-8
   75  000010a8  afa30000	sw	(r29),r3
   76  000010ac  afa20004	sw	4(r29),r2
   77  000010b0  0c000884	jal	_ditoa
   78  000010b4  54000000	nop; not filled.
   79  000010b8  23bdfff0	addi	r29,r29,#-16
   80  000010bc  afa30000	sw	(r29),r3
   81  000010c0  20060000	addi	r6,r0,#0
   82  000010c4  afa60004	sw	4(r29),r6
   83  000010c8  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
   84  000010cc  24c62000	addui	r6,r6,(LC0_LF0)&0xffff
   85  000010d0  afa60008	sw	8(r29),r6
   86  000010d4  afa2000c	sw	12(r29),r2
   87  000010d8  afa40010	sw	16(r29),r4
   88  000010dc  20060000	addi	r6,r0,#0
   89  000010e0  afa60014	sw	20(r29),r6
   90  000010e4  0c00018c	jal	_process_create
   91  000010e8  54000000	nop; not filled.
   92  000010ec  23bd0018	addi	r29,r29,#24
   93  000010f0  20630001	addi	r3,r3,#1
   94  000010f4  0065082a	slt	r1,r3,r5
   95  000010f8  10200110	beqz	r1,L2_LF0
   96  000010fc  54000000	nop; not filled.
   97  00001100  0bffffa0	j	L7_LF0
   98  00001104  54000000	nop; not filled.
   99  00001108          	L9_LF0:
  100  00001108  23bdfff0	addi	r29,r29,#-16
  101  0000110c  8c660004	lw	r6,4(r3)
  102  00001110  afa60000	sw	(r29),r6
  103  00001114  20060000	addi	r6,r0,#0
  104  00001118  afa60004	sw	4(r29),r6
  105  0000111c  2006000a	addi	r6,r0,#10
  106  00001120  afa60008	sw	8(r29),r6
  107  00001124  0c00091c	jal	_dstrtol
  108  00001128  54000000	nop; not filled.
  109  0000112c  00011020	add	r2,r0,r1
  110  00001130  8c630008	lw	r3,8(r3)
  111  00001134  afa30000	sw	(r29),r3
  112  00001138  20060000	addi	r6,r0,#0
  113  0000113c  afa60004	sw	4(r29),r6
  114  00001140  2006000a	addi	r6,r0,#10
  115  00001144  afa60008	sw	8(r29),r6
  116  00001148  0c0008f8	jal	_dstrtol
  117  0000114c  54000000	nop; not filled.
  118  00001150  20030000	addi	r3,r0,#0
  119  00001154  23bd0010	addi	r29,r29,#16
  120  00001158  2404c34f	addui	r4,r0,#49999
  121  0000115c  20420041	addi	r2,r2,#65
  122  00001160          	L13_LF0:
  123  00001160  201f0000	addi	r31,r0,#0
  124  00001164          	L16_LF0:
  125  00001164  23ff0001	addi	r31,r31,#1
  126  00001168  03e4082c	sle	r1,r31,r4
  127  0000116c  1420fff4	bnez	r1,L16_LF0
  128  00001170  54000000	nop; not filled.
  129  00001174  23bdfff0	addi	r29,r29,#-16
  130  00001178  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  131  0000117c  24c62014	addui	r6,r6,(LC1_LF0)&0xffff
  132  00001180  afa60000	sw	(r29),r6
  133  00001184  afa20004	sw	4(r29),r2
  134  00001188  afa30008	sw	8(r29),r3
  135  0000118c  0c0000cc	jal	_Printf
  136  00001190  54000000	nop; not filled.
  137  00001194  23bd0010	addi	r29,r29,#16
  138  00001198  20630001	addi	r3,r3,#1
  139  0000119c  70610063	slei	r1,r3,#99
  140  000011a0  10200068	beqz	r1,L2_LF0
  141  000011a4  54000000	nop; not filled.
  142  000011a8  0bffffb4	j	L13_LF0
  143  000011ac  54000000	nop; not filled.
  144  000011b0          	L20_LF0:
  145  000011b0  23bdfff8	addi	r29,r29,#-8
  146  000011b4  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  147  000011b8  24c6201c	addui	r6,r6,(LC2_LF0)&0xffff
  148  000011bc  afa60000	sw	(r29),r6
  149  000011c0  0c000098	jal	_Printf
  150  000011c4  54000000	nop; not filled.
  151  000011c8  8c630000	lw	r3,(r3)
  152  000011cc  afa30000	sw	(r29),r3
  153  000011d0  0c000088	jal	_Printf
  154  000011d4  54000000	nop; not filled.
  155  000011d8  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  156  000011dc  24c62024	addui	r6,r6,(LC3_LF0)&0xffff
  157  000011e0  afa60000	sw	(r29),r6
  158  000011e4  0c000074	jal	_Printf
  159  000011e8  54000000	nop; not filled.
  160  000011ec  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  161  000011f0  24c62030	addui	r6,r6,(LC4_LF0)&0xffff
  162  000011f4  afa60000	sw	(r29),r6
  163  000011f8  afa20004	sw	4(r29),r2
  164  000011fc  0c00005c	jal	_Printf
  165  00001200  54000000	nop; not filled.
  166  00001204  0c000b1c	jal	_exit
  167  00001208  54000000	nop; not filled.
  168  0000120c          	L2_LF0:
  169  0000120c  0c000b14	jal	_exit
  170  00001210  54000000	nop
  171  00001214          	.endproc _main
  172                      ;;;
  173                      ;;; Stub functions for DLX traps.
  174                      ;;;
  175                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  176                      ;;;
  177                      ;;; The traps such as Open and Close
  178                      ;;; (note the capital letters) are for use by user programs.  The traps
  179                      ;;; with names such as open and close (lower case) are for use by the OS.
  180                      ;;;
  183  00001214          	.align 2
  185                      ;;; The following are the traps to be used by user-level programs
  186                      ;;;
  188  00001214          	.align 2
  189  00001214          	.proc _Open
  190  00001214          	.global _Open
  191  00001214          	_Open:
  192                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  193                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  194                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  195  00001214  44000213	trap	#0x213
  196  00001218  4be00000	jr	r31
  197  0000121c  54000000	nop
  198  00001220          	.endproc _Open
  200  00001220          	.proc _Close
  201  00001220          	.global _Close
  202  00001220          	_Close:
  203  00001220  44000214	trap	#0x214
  204  00001224  4be00000	jr	r31
  205  00001228  54000000	nop
  206  0000122c          	.endproc _Close
  208  0000122c          	.proc _Read
  209  0000122c          	.global _Read
  210  0000122c          	_Read:
  211  0000122c  44000210	trap	#0x210
  212  00001230  4be00000	jr	r31
  213  00001234  54000000	nop
  214  00001238          	.endproc _Read
  216  00001238          	.proc _Write
  217  00001238          	.global _Write
  218  00001238          	_Write:
  219  00001238  44000211	trap	#0x211
  220  0000123c  4be00000	jr	r31
  221  00001240  54000000	nop
  222  00001244          	.endproc _Write
  224  00001244          	.proc _Lseek
  225  00001244          	.global _Lseek
  226  00001244          	_Lseek:
  227  00001244  44000212	trap	#0x212
  228  00001248  4be00000	jr	r31
  229  0000124c  54000000	nop
  230  00001250          	.endproc _Lseek
  232  00001250          	.proc _Putchar
  233  00001250          	.global _Putchar
  234  00001250          	_Putchar:
  235  00001250  44000280	trap	#0x280
  236  00001254  4be00000	jr	r31
  237  00001258  54000000	nop
  238  0000125c          	.endproc _Putchar
  240  0000125c          	.proc _Printf
  241  0000125c          	.global _Printf
  242  0000125c          	_Printf:
  243  0000125c  44000201	trap	#0x201
  244  00001260  4be00000	jr	r31
  245  00001264  54000000	nop
  246  00001268          	.endproc _Printf
  248  00001268          	.proc _getpid
  249  00001268          	.global _getpid
  250  00001268          	_getpid:
  251  00001268  44000431	trap	#0x431
  252  0000126c  4be00000	jr	r31
  253  00001270  54000000	nop
  254  00001274          	.endproc _getpid
  257  00001274          	.proc _process_create
  258  00001274          	.global _process_create
  259  00001274          	_process_create:
  260  00001274  44000432	trap	#0x432
  261  00001278  4be00000	jr	r31
  262  0000127c  54000000	nop
  263  00001280          	.endproc _process_create
  265  00001280          	.proc _shmget
  266  00001280          	.global _shmget
  267  00001280          	_shmget:
  268  00001280  44000440	trap	#0x440
  269  00001284  4be00000	jr	r31
  270  00001288  54000000	nop
  271  0000128c          	.endproc _shmget
  273  0000128c          	.proc _shmat
  274  0000128c          	.global _shmat
  275  0000128c          	_shmat:
  276  0000128c  44000441	trap	#0x441
  277  00001290  4be00000	jr	r31
  278  00001294  54000000	nop
  279  00001298          	.endproc _shmat
  281  00001298          	.proc _sem_create
  282  00001298          	.global _sem_create
  283  00001298          	_sem_create:
  284  00001298  44000450	trap	#0x450
  285  0000129c  4be00000	jr	r31
  286  000012a0  54000000	nop
  287  000012a4          	.endproc _sem_create
  289  000012a4          	.proc _sem_wait
  290  000012a4          	.global _sem_wait
  291  000012a4          	_sem_wait:
  292  000012a4  44000451	trap	#0x451
  293  000012a8  4be00000	jr	r31
  294  000012ac  54000000	nop
  295  000012b0          	.endproc _sem_wait
  297  000012b0          	.proc _sem_signal
  298  000012b0          	.global _sem_signal
  299  000012b0          	_sem_signal:
  300  000012b0  44000452	trap	#0x452
  301  000012b4  4be00000	jr	r31
  302  000012b8  54000000	nop
  303  000012bc          	.endproc _sem_signal
  305  000012bc          	.proc _lock_create
  306  000012bc          	.global _lock_create
  307  000012bc          	_lock_create:
  308  000012bc  44000453	trap	#0x453
  309  000012c0  4be00000	jr	r31
  310  000012c4  54000000	nop
  311  000012c8          	.endproc _lock_create
  313  000012c8          	.proc _lock_acquire
  314  000012c8          	.global _lock_acquire
  315  000012c8          	_lock_acquire:
  316  000012c8  44000454	trap	#0x454
  317  000012cc  4be00000	jr	r31
  318  000012d0  54000000	nop
  319  000012d4          	.endproc _lock_acquire
  321  000012d4          	.proc _lock_release
  322  000012d4          	.global _lock_release
  323  000012d4          	_lock_release:
  324  000012d4  44000455	trap	#0x455
  325  000012d8  4be00000	jr	r31
  326  000012dc  54000000	nop
  327  000012e0          	.endproc _lock_release
  329  000012e0          	.proc _cond_create
  330  000012e0          	.global _cond_create
  331  000012e0          	_cond_create:
  332  000012e0  44000456	trap	#0x456
  333  000012e4  4be00000	jr	r31
  334  000012e8  54000000	nop
  335  000012ec          	.endproc _cond_create
  337  000012ec          	.proc _cond_wait
  338  000012ec          	.global _cond_wait
  339  000012ec          	_cond_wait:
  340  000012ec  44000457	trap	#0x457
  341  000012f0  4be00000	jr	r31
  342  000012f4  54000000	nop
  343  000012f8          	.endproc _cond_wait
  345  000012f8          	.proc _cond_signal
  346  000012f8          	.global _cond_signal
  347  000012f8          	_cond_signal:
  348  000012f8  44000458	trap	#0x458
  349  000012fc  4be00000	jr	r31
  350  00001300  54000000	nop
  351  00001304          	.endproc _cond_signal
  353  00001304          	.proc _cond_broadcast
  354  00001304          	.global _cond_broadcast
  355  00001304          	_cond_broadcast:
  356  00001304  44000455	trap	#0x455
  357  00001308  4be00000	jr	r31
  358  0000130c  54000000	nop
  359  00001310          	.endproc _cond_broadcast
  361  00001310          	.proc _TimerGet
  362  00001310          	.global _TimerGet
  363  00001310          	_TimerGet:
  364  00001310  44000050	trap	#0x50
  365  00001314  4be00000	jr	r31
  366  00001318  54000000	nop
  367  0000131c          	.endproc _TimerGet
  369  0000131c          	.proc _yield
  370  0000131c          	.global _yield
  371  0000131c          	_yield:
  372  0000131c  44000433	trap	#0x433
  373  00001320  4be00000	jr	r31
  374  00001324  54000000	nop
  375  00001328          	.endproc _yield
  376                      ; Compiled by GCC
  378  00001328          	.align 2
  379  00001328          	.proc _isspace
  380  00001328          	.global _isspace
  381  00001328          	_isspace:
  382                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  383  00001328  afbefffc	sw	-4(r29),r30; push fp
  384  0000132c  001df020	add	r30,r0,r29; fp = sp
  385  00001330  afbffff8	sw	-8(r29),r31; push ret addr
  386  00001334  2fbd0010	subui	r29,r29,#16; alloc local storage
  387  00001338  afa20000	sw	0(r29),r2
  388  0000133c  83c20003	lb	r2,3(r30)
  389  00001340  201f0000	addi	r31,r0,#0
  390  00001344  304100ff	andi	r1,r2,#0x00ff
  391  00001348  60210020	seqi	r1,r1,#32
  392  0000134c  14200018	bnez	r1,L6_LF2
  393  00001350  54000000	nop; not filled.
  394  00001354  2041fff7	addi	r1,r2,#-9
  395  00001358  302100ff	andi	r1,r1,#0x00ff
  396  0000135c  70210001	sleui	r1,r1,#1
  397  00001360  10200008	beqz	r1,L5_LF2
  398  00001364  54000000	nop; not filled.
  399  00001368          	L6_LF2:
  400  00001368  201f0001	addi	r31,r0,#1
  401  0000136c          	L5_LF2:
  402  0000136c  001f0820	add	r1,r0,r31
  403  00001370  8fa20000	lw	r2,0(r29)
  404  00001374  8fdffff8	lw	r31,-8(r30)
  405  00001378  001ee820	add	r29,r0,r30
  406  0000137c  8fdefffc	lw	r30,-4(r30)
  407  00001380  4be00000	jr	r31
  408  00001384  54000000	nop
  409  00001388          	.endproc _isspace
  410  00001388          	.align 2
  411  00001388          	.proc _isxdigit
  412  00001388          	.global _isxdigit
  413  00001388          	_isxdigit:
  414                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  415  00001388  afbefffc	sw	-4(r29),r30; push fp
  416  0000138c  001df020	add	r30,r0,r29; fp = sp
  417  00001390  afbffff8	sw	-8(r29),r31; push ret addr
  418  00001394  2fbd0010	subui	r29,r29,#16; alloc local storage
  419  00001398  afa20000	sw	0(r29),r2
  420  0000139c  83df0003	lb	r31,3(r30)
  421  000013a0  20020000	addi	r2,r0,#0
  422  000013a4  23e1ffd0	addi	r1,r31,#-48
  423  000013a8  302100ff	andi	r1,r1,#0x00ff
  424  000013ac  70210009	sleui	r1,r1,#9
  425  000013b0  14200028	bnez	r1,L12_LF2
  426  000013b4  54000000	nop; not filled.
  427  000013b8  23e1ff9f	addi	r1,r31,#-97
  428  000013bc  302100ff	andi	r1,r1,#0x00ff
  429  000013c0  70210005	sleui	r1,r1,#5
  430  000013c4  14200014	bnez	r1,L12_LF2
  431  000013c8  54000000	nop; not filled.
  432  000013cc  33e100ff	andi	r1,r31,#0x00ff
  433  000013d0  64210041	snei	r1,r1,#65
  434  000013d4  14200008	bnez	r1,L11_LF2
  435  000013d8  54000000	nop; not filled.
  436  000013dc          	L12_LF2:
  437  000013dc  20020001	addi	r2,r0,#1
  438  000013e0          	L11_LF2:
  439  000013e0  00020820	add	r1,r0,r2
  440  000013e4  8fa20000	lw	r2,0(r29)
  441  000013e8  8fdffff8	lw	r31,-8(r30)
  442  000013ec  001ee820	add	r29,r0,r30
  443  000013f0  8fdefffc	lw	r30,-4(r30)
  444  000013f4  4be00000	jr	r31
  445  000013f8  54000000	nop
  446  000013fc          	.endproc _isxdigit
  447  000013fc          	.align 2
  448  000013fc          	.proc _dstrcpy
  449  000013fc          	.global _dstrcpy
  450  000013fc          	_dstrcpy:
  451                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
  452  000013fc  afbefffc	sw	-4(r29),r30; push fp
  453  00001400  001df020	add	r30,r0,r29; fp = sp
  454  00001404  afbffff8	sw	-8(r29),r31; push ret addr
  455  00001408  2fbd0010	subui	r29,r29,#16; alloc local storage
  456  0000140c  afa20000	sw	0(r29),r2
  457  00001410  afa30004	sw	4(r29),r3
  458  00001414  8fdf0000	lw	r31,(r30)
  459  00001418  8fc20004	lw	r2,4(r30)
  460  0000141c  001f1820	add	r3,r0,r31
  461  00001420          	L19_LF2:
  462  00001420  80410000	lb	r1,(r2)
  463  00001424  a3e10000	sb	(r31),r1
  464  00001428  20420001	addi	r2,r2,#1
  465  0000142c  23ff0001	addi	r31,r31,#1
  466  00001430  302100ff	andi	r1,r1,#0x00ff
  467  00001434  64210000	snei	r1,r1,#0
  468  00001438  1420ffe4	bnez	r1,L19_LF2
  469  0000143c  54000000	nop; not filled.
  470  00001440  00030820	add	r1,r0,r3
  471  00001444  8fa20000	lw	r2,0(r29)
  472  00001448  8fa30004	lw	r3,4(r29)
  473  0000144c  8fdffff8	lw	r31,-8(r30)
  474  00001450  001ee820	add	r29,r0,r30
  475  00001454  8fdefffc	lw	r30,-4(r30)
  476  00001458  4be00000	jr	r31
  477  0000145c  54000000	nop
  478  00001460          	.endproc _dstrcpy
  479  00001460          	.align 2
  480  00001460          	.proc _dstrncpy
  481  00001460          	.global _dstrncpy
  482  00001460          	_dstrncpy:
  483                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
  484  00001460  afbefffc	sw	-4(r29),r30; push fp
  485  00001464  001df020	add	r30,r0,r29; fp = sp
  486  00001468  afbffff8	sw	-8(r29),r31; push ret addr
  487  0000146c  2fbd0018	subui	r29,r29,#24; alloc local storage
  488  00001470  afa20000	sw	0(r29),r2
  489  00001474  afa30004	sw	4(r29),r3
  490  00001478  afa40008	sw	8(r29),r4
  491  0000147c  8fc20000	lw	r2,(r30)
  492  00001480  8fc30004	lw	r3,4(r30)
  493  00001484  8fdf0008	lw	r31,8(r30)
  494  00001488  00022020	add	r4,r0,r2
  495  0000148c  08000024	j	L37_LF2
  496  00001490  54000000	nop; not filled.
  497  00001494          	L34_LF2:
  498  00001494  80610000	lb	r1,(r3)
  499  00001498  a0410000	sb	(r2),r1
  500  0000149c  20630001	addi	r3,r3,#1
  501  000014a0  20420001	addi	r2,r2,#1
  502  000014a4  302100ff	andi	r1,r1,#0x00ff
  503  000014a8  64210000	snei	r1,r1,#0
  504  000014ac  10200018	beqz	r1,L32_LF2
  505  000014b0  54000000	nop; not filled.
  506  000014b4          	L37_LF2:
  507  000014b4  001f0820	add	r1,r0,r31
  508  000014b8  23ffffff	addi	r31,r31,#-1
  509  000014bc  70210000	slei	r1,r1,#0
  510  000014c0  1020ffd0	beqz	r1,L34_LF2
  511  000014c4  54000000	nop; not filled.
  512  000014c8          	L32_LF2:
  513  000014c8  00040820	add	r1,r0,r4
  514  000014cc  8fa20000	lw	r2,0(r29)
  515  000014d0  8fa30004	lw	r3,4(r29)
  516  000014d4  8fa40008	lw	r4,8(r29)
  517  000014d8  8fdffff8	lw	r31,-8(r30)
  518  000014dc  001ee820	add	r29,r0,r30
  519  000014e0  8fdefffc	lw	r30,-4(r30)
  520  000014e4  4be00000	jr	r31
  521  000014e8  54000000	nop
  522  000014ec          	.endproc _dstrncpy
  523  000014ec          	.align 2
  524  000014ec          	.proc _dstrcat
  525  000014ec          	.global _dstrcat
  526  000014ec          	_dstrcat:
  527                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
  528  000014ec  afbefffc	sw	-4(r29),r30; push fp
  529  000014f0  001df020	add	r30,r0,r29; fp = sp
  530  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  531  000014f8  2fbd0010	subui	r29,r29,#16; alloc local storage
  532  000014fc  afa20000	sw	0(r29),r2
  533  00001500  afa30004	sw	4(r29),r3
  534  00001504  8fdf0000	lw	r31,(r30)
  535  00001508  001f1820	add	r3,r0,r31
  536  0000150c  90610000	lbu	r1,(r3)
  537  00001510  64210000	snei	r1,r1,#0
  538  00001514  10200018	beqz	r1,L50_LF2
  539  00001518  54000000	nop; not filled.
  540  0000151c          	L51_LF2:
  541  0000151c  23ff0001	addi	r31,r31,#1
  542  00001520  93e10000	lbu	r1,(r31)
  543  00001524  64210000	snei	r1,r1,#0
  544  00001528  1420fff0	bnez	r1,L51_LF2
  545  0000152c  54000000	nop; not filled.
  546  00001530          	L50_LF2:
  547  00001530  001f1020	add	r2,r0,r31
  548  00001534  8fdf0004	lw	r31,4(r30)
  549  00001538          	L54_LF2:
  550  00001538  83e10000	lb	r1,(r31)
  551  0000153c  a0410000	sb	(r2),r1
  552  00001540  23ff0001	addi	r31,r31,#1
  553  00001544  20420001	addi	r2,r2,#1
  554  00001548  302100ff	andi	r1,r1,#0x00ff
  555  0000154c  64210000	snei	r1,r1,#0
  556  00001550  1420ffe4	bnez	r1,L54_LF2
  557  00001554  54000000	nop; not filled.
  558  00001558  00030820	add	r1,r0,r3
  559  0000155c  8fa20000	lw	r2,0(r29)
  560  00001560  8fa30004	lw	r3,4(r29)
  561  00001564  8fdffff8	lw	r31,-8(r30)
  562  00001568  001ee820	add	r29,r0,r30
  563  0000156c  8fdefffc	lw	r30,-4(r30)
  564  00001570  4be00000	jr	r31
  565  00001574  54000000	nop
  566  00001578          	.endproc _dstrcat
  567  00001578          	.align 2
  568  00001578          	.proc _dstrncmp
  569  00001578          	.global _dstrncmp
  570  00001578          	_dstrncmp:
  571                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
  572  00001578  afbefffc	sw	-4(r29),r30; push fp
  573  0000157c  001df020	add	r30,r0,r29; fp = sp
  574  00001580  afbffff8	sw	-8(r29),r31; push ret addr
  575  00001584  2fbd0018	subui	r29,r29,#24; alloc local storage
  576  00001588  afa20000	sw	0(r29),r2
  577  0000158c  afa30004	sw	4(r29),r3
  578  00001590  afa40008	sw	8(r29),r4
  579  00001594  afa5000c	sw	12(r29),r5
  580  00001598  8fc30000	lw	r3,(r30)
  581  0000159c  8fc40004	lw	r4,4(r30)
  582  000015a0  8fc50008	lw	r5,8(r30)
  583  000015a4  20020000	addi	r2,r0,#0
  584  000015a8  0045082a	slt	r1,r2,r5
  585  000015ac  1020003c	beqz	r1,L73_LF2
  586  000015b0  54000000	nop; not filled.
  587  000015b4          	L75_LF2:
  588  000015b4  909f0000	lbu	r31,(r4)
  589  000015b8  67e10000	snei	r1,r31,#0
  590  000015bc  10200038	beqz	r1,L86_LF2
  591  000015c0  54000000	nop; not filled.
  592  000015c4  90610000	lbu	r1,(r3)
  593  000015c8  003f0829	sne	r1,r1,r31
  594  000015cc  1420001c	bnez	r1,L73_LF2
  595  000015d0  54000000	nop; not filled.
  596  000015d4  20630001	addi	r3,r3,#1
  597  000015d8  20840001	addi	r4,r4,#1
  598  000015dc  20420001	addi	r2,r2,#1
  599  000015e0  0045082a	slt	r1,r2,r5
  600  000015e4  1420ffcc	bnez	r1,L75_LF2
  601  000015e8  54000000	nop; not filled.
  602  000015ec          	L73_LF2:
  603  000015ec  00450828	seq	r1,r2,r5
  604  000015f0  10200010	beqz	r1,L80_LF2
  605  000015f4  54000000	nop; not filled.
  606  000015f8          	L86_LF2:
  607  000015f8  20010000	addi	r1,r0,#0
  608  000015fc  08000028	j	L84_LF2
  609  00001600  54000000	nop; not filled.
  610  00001604          	L80_LF2:
  611  00001604  907f0000	lbu	r31,(r3)
  612  00001608  90830000	lbu	r3,(r4)
  613  0000160c  03e30822	sub	r1,r31,r3
  614  00001610  74210000	sgei	r1,r1,#0
  615  00001614  2002ffff	addi	r2,r0,#-1
  616  00001618  10200008	beqz	r1,L82_LF2
  617  0000161c  54000000	nop; not filled.
  618  00001620  03e31029	sne	r2,r31,r3
  619  00001624          	L82_LF2:
  620  00001624  00020820	add	r1,r0,r2
  621  00001628          	L84_LF2:
  622  00001628  8fa20000	lw	r2,0(r29)
  623  0000162c  8fa30004	lw	r3,4(r29)
  624  00001630  8fa40008	lw	r4,8(r29)
  625  00001634  8fa5000c	lw	r5,12(r29)
  626  00001638  8fdffff8	lw	r31,-8(r30)
  627  0000163c  001ee820	add	r29,r0,r30
  628  00001640  8fdefffc	lw	r30,-4(r30)
  629  00001644  4be00000	jr	r31
  630  00001648  54000000	nop
  631  0000164c          	.endproc _dstrncmp
  632  0000164c          	.align 2
  633  0000164c          	.proc _dstrlen
  634  0000164c          	.global _dstrlen
  635  0000164c          	_dstrlen:
  636                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
  637  0000164c  afbefffc	sw	-4(r29),r30; push fp
  638  00001650  001df020	add	r30,r0,r29; fp = sp
  639  00001654  afbffff8	sw	-8(r29),r31; push ret addr
  640  00001658  2fbd0010	subui	r29,r29,#16; alloc local storage
  641  0000165c  afa20000	sw	0(r29),r2
  642  00001660  8fdf0000	lw	r31,(r30)
  643  00001664  20020000	addi	r2,r0,#0
  644  00001668  08000008	j	L97_LF2
  645  0000166c  54000000	nop; not filled.
  646  00001670          	L95_LF2:
  647  00001670  20420001	addi	r2,r2,#1
  648  00001674          	L97_LF2:
  649  00001674  93e10000	lbu	r1,(r31)
  650  00001678  23ff0001	addi	r31,r31,#1
  651  0000167c  64210000	snei	r1,r1,#0
  652  00001680  1420ffec	bnez	r1,L95_LF2
  653  00001684  54000000	nop; not filled.
  654  00001688  00020820	add	r1,r0,r2
  655  0000168c  8fa20000	lw	r2,0(r29)
  656  00001690  8fdffff8	lw	r31,-8(r30)
  657  00001694  001ee820	add	r29,r0,r30
  658  00001698  8fdefffc	lw	r30,-4(r30)
  659  0000169c  4be00000	jr	r31
  660  000016a0  54000000	nop
  661  000016a4          	.endproc _dstrlen
  662  000016a4          	.align 2
  663  000016a4          	.proc _dstrstr
  664  000016a4          	.global _dstrstr
  665  000016a4          	_dstrstr:
  666                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
  667  000016a4  afbefffc	sw	-4(r29),r30; push fp
  668  000016a8  001df020	add	r30,r0,r29; fp = sp
  669  000016ac  afbffff8	sw	-8(r29),r31; push ret addr
  670  000016b0  2fbd0020	subui	r29,r29,#32; alloc local storage
  671  000016b4  afa20000	sw	0(r29),r2
  672  000016b8  afa30004	sw	4(r29),r3
  673  000016bc  afa40008	sw	8(r29),r4
  674  000016c0  afa5000c	sw	12(r29),r5
  675  000016c4  afa60010	sw	16(r29),r6
  676  000016c8  afa70014	sw	20(r29),r7
  677  000016cc  8fc50000	lw	r5,(r30)
  678  000016d0  8fc70004	lw	r7,4(r30)
  679  000016d4  20030000	addi	r3,r0,#0
  680  000016d8  90e10000	lbu	r1,(r7)
  681  000016dc  20e20001	addi	r2,r7,#1
  682  000016e0  64210000	snei	r1,r1,#0
  683  000016e4  1020001c	beqz	r1,L125_LF2
  684  000016e8  54000000	nop; not filled.
  685  000016ec          	L126_LF2:
  686  000016ec  20630001	addi	r3,r3,#1
  687  000016f0  90410000	lbu	r1,(r2)
  688  000016f4  20420001	addi	r2,r2,#1
  689  000016f8  64210000	snei	r1,r1,#0
  690  000016fc  1420ffec	bnez	r1,L126_LF2
  691  00001700  54000000	nop; not filled.
  692  00001704          	L125_LF2:
  693  00001704  00033020	add	r6,r0,r3
  694  00001708  080000ac	j	L149_LF2
  695  0000170c  54000000	nop; not filled.
  696  00001710          	L130_LF2:
  697  00001710  00051820	add	r3,r0,r5
  698  00001714  00072020	add	r4,r0,r7
  699  00001718  20020000	addi	r2,r0,#0
  700  0000171c  0046082a	slt	r1,r2,r6
  701  00001720  1020003c	beqz	r1,L134_LF2
  702  00001724  54000000	nop; not filled.
  703  00001728          	L136_LF2:
  704  00001728  909f0000	lbu	r31,(r4)
  705  0000172c  67e10000	snei	r1,r31,#0
  706  00001730  10200038	beqz	r1,L150_LF2
  707  00001734  54000000	nop; not filled.
  708  00001738  90610000	lbu	r1,(r3)
  709  0000173c  003f0829	sne	r1,r1,r31
  710  00001740  1420001c	bnez	r1,L134_LF2
  711  00001744  54000000	nop; not filled.
  712  00001748  20630001	addi	r3,r3,#1
  713  0000174c  20840001	addi	r4,r4,#1
  714  00001750  20420001	addi	r2,r2,#1
  715  00001754  0046082a	slt	r1,r2,r6
  716  00001758  1420ffcc	bnez	r1,L136_LF2
  717  0000175c  54000000	nop; not filled.
  718  00001760          	L134_LF2:
  719  00001760  00460828	seq	r1,r2,r6
  720  00001764  10200010	beqz	r1,L141_LF2
  721  00001768  54000000	nop; not filled.
  722  0000176c          	L150_LF2:
  723  0000176c  20010000	addi	r1,r0,#0
  724  00001770  08000028	j	L132_LF2
  725  00001774  54000000	nop; not filled.
  726  00001778          	L141_LF2:
  727  00001778  90630000	lbu	r3,(r3)
  728  0000177c  90820000	lbu	r2,(r4)
  729  00001780  00620822	sub	r1,r3,r2
  730  00001784  74210000	sgei	r1,r1,#0
  731  00001788  201fffff	addi	r31,r0,#-1
  732  0000178c  10200008	beqz	r1,L143_LF2
  733  00001790  54000000	nop; not filled.
  734  00001794  0062f829	sne	r31,r3,r2
  735  00001798          	L143_LF2:
  736  00001798  001f0820	add	r1,r0,r31
  737  0000179c          	L132_LF2:
  738  0000179c  64210000	snei	r1,r1,#0
  739  000017a0  14200010	bnez	r1,L131_LF2
  740  000017a4  54000000	nop; not filled.
  741  000017a8  00050820	add	r1,r0,r5
  742  000017ac  0800001c	j	L146_LF2
  743  000017b0  54000000	nop; not filled.
  744  000017b4          	L131_LF2:
  745  000017b4  20a50001	addi	r5,r5,#1
  746  000017b8          	L149_LF2:
  747  000017b8  90a10000	lbu	r1,(r5)
  748  000017bc  64210000	snei	r1,r1,#0
  749  000017c0  1420ff4c	bnez	r1,L130_LF2
  750  000017c4  54000000	nop; not filled.
  751  000017c8  20010000	addi	r1,r0,#0
  752  000017cc          	L146_LF2:
  753  000017cc  8fa20000	lw	r2,0(r29)
  754  000017d0  8fa30004	lw	r3,4(r29)
  755  000017d4  8fa40008	lw	r4,8(r29)
  756  000017d8  8fa5000c	lw	r5,12(r29)
  757  000017dc  8fa60010	lw	r6,16(r29)
  758  000017e0  8fa70014	lw	r7,20(r29)
  759  000017e4  8fdffff8	lw	r31,-8(r30)
  760  000017e8  001ee820	add	r29,r0,r30
  761  000017ec  8fdefffc	lw	r30,-4(r30)
  762  000017f0  4be00000	jr	r31
  763  000017f4  54000000	nop
  764  000017f8          	.endproc _dstrstr
  765  000017f8          	.align 2
  766  000017f8          	.proc _dmindex
  767  000017f8          	.global _dmindex
  768  000017f8          	_dmindex:
  769                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
  770  000017f8  afbefffc	sw	-4(r29),r30; push fp
  771  000017fc  001df020	add	r30,r0,r29; fp = sp
  772  00001800  afbffff8	sw	-8(r29),r31; push ret addr
  773  00001804  2fbd0020	subui	r29,r29,#32; alloc local storage
  774  00001808  afa20000	sw	0(r29),r2
  775  0000180c  afa30004	sw	4(r29),r3
  776  00001810  afa40008	sw	8(r29),r4
  777  00001814  afa5000c	sw	12(r29),r5
  778  00001818  afa60010	sw	16(r29),r6
  779  0000181c  8fc40000	lw	r4,(r30)
  780  00001820  8fc60004	lw	r6,4(r30)
  781  00001824  90810000	lbu	r1,(r4)
  782  00001828  64210000	snei	r1,r1,#0
  783  0000182c  10200060	beqz	r1,L164_LF2
  784  00001830  54000000	nop; not filled.
  785  00001834  00012820	add	r5,r0,r1
  786  00001838          	L165_LF2:
  787  00001838  00061020	add	r2,r0,r6
  788  0000183c  80df0000	lb	r31,(r6)
  789  00001840  33e100ff	andi	r1,r31,#0x00ff
  790  00001844  64210000	snei	r1,r1,#0
  791  00001848  1020003c	beqz	r1,L163_LF2
  792  0000184c  54000000	nop; not filled.
  793  00001850  90830000	lbu	r3,(r4)
  794  00001854          	L169_LF2:
  795  00001854  33e100ff	andi	r1,r31,#0x00ff
  796  00001858  00610828	seq	r1,r3,r1
  797  0000185c  10200010	beqz	r1,L168_LF2
  798  00001860  54000000	nop; not filled.
  799  00001864  00040820	add	r1,r0,r4
  800  00001868  08000028	j	L173_LF2
  801  0000186c  54000000	nop; not filled.
  802  00001870          	L168_LF2:
  803  00001870  20420001	addi	r2,r2,#1
  804  00001874  805f0000	lb	r31,(r2)
  805  00001878  33e100ff	andi	r1,r31,#0x00ff
  806  0000187c  64210000	snei	r1,r1,#0
  807  00001880  1420ffd0	bnez	r1,L169_LF2
  808  00001884  54000000	nop; not filled.
  809  00001888          	L163_LF2:
  810  00001888  14a0ffac	bnez	r5,L165_LF2
  811  0000188c  54000000	nop; not filled.
  812  00001890          	L164_LF2:
  813  00001890  20010000	addi	r1,r0,#0
  814  00001894          	L173_LF2:
  815  00001894  8fa20000	lw	r2,0(r29)
  816  00001898  8fa30004	lw	r3,4(r29)
  817  0000189c  8fa40008	lw	r4,8(r29)
  818  000018a0  8fa5000c	lw	r5,12(r29)
  819  000018a4  8fa60010	lw	r6,16(r29)
  820  000018a8  8fdffff8	lw	r31,-8(r30)
  821  000018ac  001ee820	add	r29,r0,r30
  822  000018b0  8fdefffc	lw	r30,-4(r30)
  823  000018b4  4be00000	jr	r31
  824  000018b8  54000000	nop
  825  000018bc          	.endproc _dmindex
  826  000018bc          	.align 2
  827  000018bc          	.proc _dindex
  828  000018bc          	.global _dindex
  829  000018bc          	_dindex:
  830                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
  831  000018bc  afbefffc	sw	-4(r29),r30; push fp
  832  000018c0  001df020	add	r30,r0,r29; fp = sp
  833  000018c4  afbffff8	sw	-8(r29),r31; push ret addr
  834  000018c8  2fbd0010	subui	r29,r29,#16; alloc local storage
  835  000018cc  afa20000	sw	0(r29),r2
  836  000018d0  afa30004	sw	4(r29),r3
  837  000018d4  8fc20000	lw	r2,(r30)
  838  000018d8  8fc30004	lw	r3,4(r30)
  839  000018dc  08000024	j	L187_LF2
  840  000018e0  54000000	nop; not filled.
  841  000018e4          	L183_LF2:
  842  000018e4  33e100ff	andi	r1,r31,#0x00ff
  843  000018e8  00230828	seq	r1,r1,r3
  844  000018ec  10200010	beqz	r1,L184_LF2
  845  000018f0  54000000	nop; not filled.
  846  000018f4  00020820	add	r1,r0,r2
  847  000018f8  08000020	j	L186_LF2
  848  000018fc  54000000	nop; not filled.
  849  00001900          	L184_LF2:
  850  00001900  20420001	addi	r2,r2,#1
  851  00001904          	L187_LF2:
  852  00001904  805f0000	lb	r31,(r2)
  853  00001908  33e100ff	andi	r1,r31,#0x00ff
  854  0000190c  64210000	snei	r1,r1,#0
  855  00001910  1420ffd0	bnez	r1,L183_LF2
  856  00001914  54000000	nop; not filled.
  857  00001918  20010000	addi	r1,r0,#0
  858  0000191c          	L186_LF2:
  859  0000191c  8fa20000	lw	r2,0(r29)
  860  00001920  8fa30004	lw	r3,4(r29)
  861  00001924  8fdffff8	lw	r31,-8(r30)
  862  00001928  001ee820	add	r29,r0,r30
  863  0000192c  8fdefffc	lw	r30,-4(r30)
  864  00001930  4be00000	jr	r31
  865  00001934  54000000	nop
  866  00001938          	.endproc _dindex
  867  00001938          	.align 2
  868  00001938          	.proc _ditoa
  869  00001938          	.global _ditoa
  870  00001938          	_ditoa:
  871                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
  872  00001938  afbefffc	sw	-4(r29),r30; push fp
  873  0000193c  001df020	add	r30,r0,r29; fp = sp
  874  00001940  afbffff8	sw	-8(r29),r31; push ret addr
  875  00001944  2fbd0020	subui	r29,r29,#32; alloc local storage
  876  00001948  afa20000	sw	0(r29),r2
  877  0000194c  afa30004	sw	4(r29),r3
  878  00001950  afa40008	sw	8(r29),r4
  879  00001954  afa5000c	sw	12(r29),r5
  880  00001958  afa60010	sw	16(r29),r6
  881  0000195c  8fc30000	lw	r3,(r30)
  882  00001960  8fc40004	lw	r4,4(r30)
  883  00001964  68610000	slti	r1,r3,#0
  884  00001968  10200010	beqz	r1,L203_LF2
  885  0000196c  54000000	nop; not filled.
  886  00001970  2006002d	addi	r6,r0,(#0x2d)&0xff
  887  00001974  08000014	j	L216_LF2
  888  00001978  54000000	nop; not filled.
  889  0000197c          	L203_LF2:
  890  0000197c  64610000	snei	r1,r3,#0
  891  00001980  14200018	bnez	r1,L205_LF2
  892  00001984  54000000	nop; not filled.
  893  00001988  20060030	addi	r6,r0,(#0x30)&0xff
  894  0000198c          	L216_LF2:
  895  0000198c  a0860000	sb	(r4),r6
  896  00001990  20840001	addi	r4,r4,#1
  897  00001994  0800007c	j	L204_LF2
  898  00001998  54000000	nop; not filled.
  899  0000199c          	L205_LF2:
  900  0000199c  201f0001	addi	r31,r0,#1
  901  000019a0  03e3082c	sle	r1,r31,r3
  902  000019a4  1020001c	beqz	r1,L208_LF2
  903  000019a8  54000000	nop; not filled.
  904  000019ac          	L209_LF2:
  905  000019ac  53e10002	slli	r1,r31,#0x2
  906  000019b0  003f0820	add	r1,r1,r31
  907  000019b4  503f0001	slli	r31,r1,#0x1
  908  000019b8  03e3082c	sle	r1,r31,r3
  909  000019bc  1420ffec	bnez	r1,L209_LF2
  910  000019c0  54000000	nop; not filled.
  911  000019c4          	L208_LF2:
  912  000019c4  2005000a	addi	r5,r0,#10
  913  000019c8          	L212_LF2:
  914  000019c8  03e00035	movi2fp	f0,r31
  915  000019cc  00a00835	movi2fp	f1,r5
  916  000019d0  0401000f	div	f0,f0,f1
  917  000019d4  0000f834	movfp2i	r31,f0
  918  000019d8  00600035	movi2fp	f0,r3
  919  000019dc  03e00835	movi2fp	f1,r31
  920  000019e0  0401000f	div	f0,f0,f1
  921  000019e4  00001034	movfp2i	r2,f0
  922  000019e8  20410030	addi	r1,r2,#48
  923  000019ec  a0810000	sb	(r4),r1
  924  000019f0  20840001	addi	r4,r4,#1
  925  000019f4  00400035	movi2fp	f0,r2
  926  000019f8  03e00835	movi2fp	f1,r31
  927  000019fc  0401000e	mult	f0,f0,f1
  928  00001a00  00000834	movfp2i	r1,f0
  929  00001a04  00611822	sub	r3,r3,r1
  930  00001a08  6fe10001	sgti	r1,r31,#1
  931  00001a0c  1420ffb8	bnez	r1,L212_LF2
  932  00001a10  54000000	nop; not filled.
  933  00001a14          	L204_LF2:
  934  00001a14  20060000	addi	r6,r0,(#0x0)&0xff
  935  00001a18  a0860000	sb	(r4),r6
  936  00001a1c  8fa20000	lw	r2,0(r29)
  937  00001a20  8fa30004	lw	r3,4(r29)
  938  00001a24  8fa40008	lw	r4,8(r29)
  939  00001a28  8fa5000c	lw	r5,12(r29)
  940  00001a2c  8fa60010	lw	r6,16(r29)
  941  00001a30  8fdffff8	lw	r31,-8(r30)
  942  00001a34  001ee820	add	r29,r0,r30
  943  00001a38  8fdefffc	lw	r30,-4(r30)
  944  00001a3c  4be00000	jr	r31
  945  00001a40  54000000	nop
  946  00001a44          	.endproc _ditoa
  947  00001a44          	.align 2
  948  00001a44          	.proc _dstrtol
  949  00001a44          	.global _dstrtol
  950  00001a44          	_dstrtol:
  951                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
  952  00001a44  afbefffc	sw	-4(r29),r30; push fp
  953  00001a48  001df020	add	r30,r0,r29; fp = sp
  954  00001a4c  afbffff8	sw	-8(r29),r31; push ret addr
  955  00001a50  2fbd0020	subui	r29,r29,#32; alloc local storage
  956  00001a54  afa20000	sw	0(r29),r2
  957  00001a58  afa30004	sw	4(r29),r3
  958  00001a5c  afa40008	sw	8(r29),r4
  959  00001a60  afa5000c	sw	12(r29),r5
  960  00001a64  afa60010	sw	16(r29),r6
  961  00001a68  8fc20000	lw	r2,(r30)
  962  00001a6c  8fc50004	lw	r5,4(r30)
  963  00001a70  8fc40008	lw	r4,8(r30)
  964  00001a74  20030000	addi	r3,r0,#0
  965  00001a78  08000008	j	L247_LF2
  966  00001a7c  54000000	nop; not filled.
  967  00001a80          	L220_LF2:
  968  00001a80  20420001	addi	r2,r2,#1
  969  00001a84          	L247_LF2:
  970  00001a84  805f0000	lb	r31,(r2)
  971  00001a88  33e100ff	andi	r1,r31,#0x00ff
  972  00001a8c  60210020	seqi	r1,r1,#32
  973  00001a90  1420ffec	bnez	r1,L220_LF2
  974  00001a94  54000000	nop; not filled.
  975  00001a98  23e1fff7	addi	r1,r31,#-9
  976  00001a9c  302100ff	andi	r1,r1,#0x00ff
  977  00001aa0  70210001	sleui	r1,r1,#1
  978  00001aa4  1420ffd8	bnez	r1,L220_LF2
  979  00001aa8  54000000	nop; not filled.
  980  00001aac  64a10000	snei	r1,r5,#0
  981  00001ab0  10200008	beqz	r1,L222_LF2
  982  00001ab4  54000000	nop; not filled.
  983  00001ab8  aca20000	sw	(r5),r2
  984  00001abc          	L222_LF2:
  985  00001abc  905f0000	lbu	r31,(r2)
  986  00001ac0  67e10000	snei	r1,r31,#0
  987  00001ac4  10200090	beqz	r1,L248_LF2
  988  00001ac8  54000000	nop; not filled.
  989  00001acc  63e1002d	seqi	r1,r31,#45
  990  00001ad0  10200014	beqz	r1,L224_LF2
  991  00001ad4  54000000	nop; not filled.
  992  00001ad8  2006ffff	addi	r6,r0,#-1
  993  00001adc  20420001	addi	r2,r2,#1
  994  00001ae0  08000008	j	L225_LF2
  995  00001ae4  54000000	nop; not filled.
  996  00001ae8          	L224_LF2:
  997  00001ae8  20060001	addi	r6,r0,#1
  998  00001aec          	L225_LF2:
  999  00001aec  64810000	snei	r1,r4,#0
 1000  00001af0  14200054	bnez	r1,L226_LF2
 1001  00001af4  54000000	nop; not filled.
 1002  00001af8  90410000	lbu	r1,(r2)
 1003  00001afc  60210030	seqi	r1,r1,#48
 1004  00001b00  10200040	beqz	r1,L227_LF2
 1005  00001b04  54000000	nop; not filled.
 1006  00001b08  20420001	addi	r2,r2,#1
 1007  00001b0c  905f0000	lbu	r31,(r2)
 1008  00001b10  63e10078	seqi	r1,r31,#120
 1009  00001b14  14200010	bnez	r1,L229_LF2
 1010  00001b18  54000000	nop; not filled.
 1011  00001b1c  63e10058	seqi	r1,r31,#88
 1012  00001b20  10200014	beqz	r1,L228_LF2
 1013  00001b24  54000000	nop; not filled.
 1014  00001b28          	L229_LF2:
 1015  00001b28  20040010	addi	r4,r0,#16
 1016  00001b2c  20420001	addi	r2,r2,#1
 1017  00001b30  08000014	j	L226_LF2
 1018  00001b34  54000000	nop; not filled.
 1019  00001b38          	L228_LF2:
 1020  00001b38  20040008	addi	r4,r0,#8
 1021  00001b3c  08000008	j	L226_LF2
 1022  00001b40  54000000	nop; not filled.
 1023  00001b44          	L227_LF2:
 1024  00001b44  2004000a	addi	r4,r0,#10
 1025  00001b48          	L226_LF2:
 1026  00001b48  2081ffff	addi	r1,r4,#-1
 1027  00001b4c  6c21000f	sgtui	r1,r1,#15
 1028  00001b50  10200010	beqz	r1,L233_LF2
 1029  00001b54  54000000	nop; not filled.
 1030  00001b58          	L248_LF2:
 1031  00001b58  00030820	add	r1,r0,r3
 1032  00001b5c  080000c4	j	L245_LF2
 1033  00001b60  54000000	nop; not filled.
 1034  00001b64          	L233_LF2:
 1035  00001b64  805f0000	lb	r31,(r2)
 1036  00001b68  23e1ffd0	addi	r1,r31,#-48
 1037  00001b6c  302100ff	andi	r1,r1,#0x00ff
 1038  00001b70  70210009	sleui	r1,r1,#9
 1039  00001b74  10200014	beqz	r1,L236_LF2
 1040  00001b78  54000000	nop; not filled.
 1041  00001b7c  33e100ff	andi	r1,r31,#0x00ff
 1042  00001b80  2021ffd0	addi	r1,r1,#-48
 1043  00001b84  08000050	j	L237_LF2
 1044  00001b88  54000000	nop; not filled.
 1045  00001b8c          	L236_LF2:
 1046  00001b8c  23e1ff9f	addi	r1,r31,#-97
 1047  00001b90  302100ff	andi	r1,r1,#0x00ff
 1048  00001b94  70210019	sleui	r1,r1,#25
 1049  00001b98  10200014	beqz	r1,L238_LF2
 1050  00001b9c  54000000	nop; not filled.
 1051  00001ba0  33e100ff	andi	r1,r31,#0x00ff
 1052  00001ba4  2021ffa9	addi	r1,r1,#-87
 1053  00001ba8  0800002c	j	L237_LF2
 1054  00001bac  54000000	nop; not filled.
 1055  00001bb0          	L238_LF2:
 1056  00001bb0  23e1ffbf	addi	r1,r31,#-65
 1057  00001bb4  302100ff	andi	r1,r1,#0x00ff
 1058  00001bb8  70210019	sleui	r1,r1,#25
 1059  00001bbc  10200014	beqz	r1,L240_LF2
 1060  00001bc0  54000000	nop; not filled.
 1061  00001bc4  33e100ff	andi	r1,r31,#0x00ff
 1062  00001bc8  2021ffc9	addi	r1,r1,#-55
 1063  00001bcc  08000008	j	L237_LF2
 1064  00001bd0  54000000	nop; not filled.
 1065  00001bd4          	L240_LF2:
 1066  00001bd4  200103e8	addi	r1,r0,#1000
 1067  00001bd8          	L237_LF2:
 1068  00001bd8  0024f82a	slt	r31,r1,r4
 1069  00001bdc  13e00024	beqz	r31,L246_LF2
 1070  00001be0  54000000	nop; not filled.
 1071  00001be4  00600035	movi2fp	f0,r3
 1072  00001be8  00800835	movi2fp	f1,r4
 1073  00001bec  0401000e	mult	f0,f0,f1
 1074  00001bf0  00001834	movfp2i	r3,f0
 1075  00001bf4  00611820	add	r3,r3,r1
 1076  00001bf8  20420001	addi	r2,r2,#1
 1077  00001bfc  17e0ff64	bnez	r31,L233_LF2
 1078  00001c00  54000000	nop; not filled.
 1079  00001c04          	L246_LF2:
 1080  00001c04  64a10000	snei	r1,r5,#0
 1081  00001c08  10200008	beqz	r1,L244_LF2
 1082  00001c0c  54000000	nop; not filled.
 1083  00001c10  aca20000	sw	(r5),r2
 1084  00001c14          	L244_LF2:
 1085  00001c14  00600035	movi2fp	f0,r3
 1086  00001c18  00c00835	movi2fp	f1,r6
 1087  00001c1c  0401000e	mult	f0,f0,f1
 1088  00001c20  00000834	movfp2i	r1,f0
 1089  00001c24          	L245_LF2:
 1090  00001c24  8fa20000	lw	r2,0(r29)
 1091  00001c28  8fa30004	lw	r3,4(r29)
 1092  00001c2c  8fa40008	lw	r4,8(r29)
 1093  00001c30  8fa5000c	lw	r5,12(r29)
 1094  00001c34  8fa60010	lw	r6,16(r29)
 1095  00001c38  8fdffff8	lw	r31,-8(r30)
 1096  00001c3c  001ee820	add	r29,r0,r30
 1097  00001c40  8fdefffc	lw	r30,-4(r30)
 1098  00001c44  4be00000	jr	r31
 1099  00001c48  54000000	nop
 1100  00001c4c          	.endproc _dstrtol
 1101  00001c4c          	.align 2
 1102  00001c4c          	.proc _bcopy
 1103  00001c4c          	.global _bcopy
 1104  00001c4c          	_bcopy:
 1105                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 1106  00001c4c  afbefffc	sw	-4(r29),r30; push fp
 1107  00001c50  001df020	add	r30,r0,r29; fp = sp
 1108  00001c54  afbffff8	sw	-8(r29),r31; push ret addr
 1109  00001c58  2fbd0018	subui	r29,r29,#24; alloc local storage
 1110  00001c5c  afa20000	sw	0(r29),r2
 1111  00001c60  afa30004	sw	4(r29),r3
 1112  00001c64  afa40008	sw	8(r29),r4
 1113  00001c68  8fc30000	lw	r3,(r30)
 1114  00001c6c  8fc20004	lw	r2,4(r30)
 1115  00001c70  8fdf0008	lw	r31,8(r30)
 1116  00001c74  08000014	j	L259_LF2
 1117  00001c78  54000000	nop; not filled.
 1118  00001c7c          	L257_LF2:
 1119  00001c7c  80640000	lb	r4,(r3)
 1120  00001c80  a0440000	sb	(r2),r4
 1121  00001c84  20630001	addi	r3,r3,#1
 1122  00001c88  20420001	addi	r2,r2,#1
 1123  00001c8c          	L259_LF2:
 1124  00001c8c  001f0820	add	r1,r0,r31
 1125  00001c90  23ffffff	addi	r31,r31,#-1
 1126  00001c94  6c210000	sgti	r1,r1,#0
 1127  00001c98  1420ffe0	bnez	r1,L257_LF2
 1128  00001c9c  54000000	nop; not filled.
 1129  00001ca0  8fa20000	lw	r2,0(r29)
 1130  00001ca4  8fa30004	lw	r3,4(r29)
 1131  00001ca8  8fa40008	lw	r4,8(r29)
 1132  00001cac  8fdffff8	lw	r31,-8(r30)
 1133  00001cb0  001ee820	add	r29,r0,r30
 1134  00001cb4  8fdefffc	lw	r30,-4(r30)
 1135  00001cb8  4be00000	jr	r31
 1136  00001cbc  54000000	nop
 1137  00001cc0          	.endproc _bcopy
 1138  00001cc0          	.align 2
 1139  00001cc0          	.proc _bzero
 1140  00001cc0          	.global _bzero
 1141  00001cc0          	_bzero:
 1142                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 1143  00001cc0  afbefffc	sw	-4(r29),r30; push fp
 1144  00001cc4  001df020	add	r30,r0,r29; fp = sp
 1145  00001cc8  afbffff8	sw	-8(r29),r31; push ret addr
 1146  00001ccc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1147  00001cd0  afa20000	sw	0(r29),r2
 1148  00001cd4  afa30004	sw	4(r29),r3
 1149  00001cd8  8fc20000	lw	r2,(r30)
 1150  00001cdc  8fdf0004	lw	r31,4(r30)
 1151  00001ce0  08000010	j	L270_LF2
 1152  00001ce4  54000000	nop; not filled.
 1153  00001ce8          	L268_LF2:
 1154  00001ce8  20030000	addi	r3,r0,(#0x0)&0xff
 1155  00001cec  a0430000	sb	(r2),r3
 1156  00001cf0  20420001	addi	r2,r2,#1
 1157  00001cf4          	L270_LF2:
 1158  00001cf4  001f0820	add	r1,r0,r31
 1159  00001cf8  23ffffff	addi	r31,r31,#-1
 1160  00001cfc  6c210000	sgti	r1,r1,#0
 1161  00001d00  1420ffe4	bnez	r1,L268_LF2
 1162  00001d04  54000000	nop; not filled.
 1163  00001d08  8fa20000	lw	r2,0(r29)
 1164  00001d0c  8fa30004	lw	r3,4(r29)
 1165  00001d10  8fdffff8	lw	r31,-8(r30)
 1166  00001d14  001ee820	add	r29,r0,r30
 1167  00001d18  8fdefffc	lw	r30,-4(r30)
 1168  00001d1c  4be00000	jr	r31
 1169  00001d20  54000000	nop
 1170  00001d24          	.endproc _bzero
 1171                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1172                      ;;;
 1173                      ;;; Most of the traps are called in files from libtraps.
 1176  00001d24          	.align 2
 1177  00001d24          	.proc _exit
 1178  00001d24          	.global _exit
 1179  00001d24          	_exit:
 1180  00001d24  44000300	trap	#0x300
 1181  00001d28  4be00000	jr	r31
 1182  00001d2c  54000000	nop
 1183  00001d30          	.endproc _exit
 1185                      ; for the benefit of gcc.
 1186  00001d30          	.proc ___main
 1187  00001d30          	.global ___main
 1188  00001d30          	___main:
 1189  00001d30  4be00000	jr	r31
 1190  00001d34  54000000	nop
 1191  00001d38          	.endproc ___main
 1192  00001d38          	.text
 1193  00001d38          	.global _etext
 1194  00001d38          	_etext:
 1195  00001d38          	.align 3
 1196  00001d38          	.data
 1197  0000203b          	.global _edata
 1198  0000203b          	_edata:
